// Code generated by mockery v2.16.0. DO NOT EDIT.

package mocks

import (
	context "context"

	domain "github.com/sainak/status-checker/core/domain"
	mock "github.com/stretchr/testify/mock"
)

// WebsiteStatusChecker is an autogenerated mock type for the WebsiteStatusChecker type
type WebsiteStatusChecker struct {
	mock.Mock
}

// Check provides a mock function with given fields: ctx, name
func (_m *WebsiteStatusChecker) Check(ctx context.Context, name string) (bool, error) {
	ret := _m.Called(ctx, name)

	var r0 bool
	if rf, ok := ret.Get(0).(func(context.Context, string) bool); ok {
		r0 = rf(ctx, name)
	} else {
		r0 = ret.Get(0).(bool)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, name)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateStatus provides a mock function with given fields: ctx, status
func (_m *WebsiteStatusChecker) CreateStatus(ctx context.Context, status *domain.Status) error {
	ret := _m.Called(ctx, status)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *domain.Status) error); ok {
		r0 = rf(ctx, status)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewWebsiteStatusChecker interface {
	mock.TestingT
	Cleanup(func())
}

// NewWebsiteStatusChecker creates a new instance of WebsiteStatusChecker. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewWebsiteStatusChecker(t mockConstructorTestingTNewWebsiteStatusChecker) *WebsiteStatusChecker {
	mock := &WebsiteStatusChecker{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
